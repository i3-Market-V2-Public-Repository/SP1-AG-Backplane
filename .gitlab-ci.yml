#  Copyright 2020-2022 i3-MARKET Consortium:
#
#  ATHENS UNIVERSITY OF ECONOMICS AND BUSINESS - RESEARCH CENTER
#  ATOS SPAIN SA
#  EUROPEAN DIGITAL SME ALLIANCE
#  GFT ITALIA SRL
#  GUARDTIME OU
#  HOP UBIQUITOUS SL
#  IBM RESEARCH GMBH
#  IDEMIA FRANCE
#  SIEMENS AKTIENGESELLSCHAFT
#  SIEMENS SRL
#  TELESTO TECHNOLOGIES PLIROFORIKIS KAI EPIKOINONION EPE
#  UNIVERSITAT POLITECNICA DE CATALUNYA
#  UNPARALLEL INNOVATION LDA
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

stages:
  - gather
  - integrate
  - build
  - test
  - deploy

variables:
  LOOPBACK_CLI_VERSION: "3.1.0"
  INTEGRATOR_URL: "${CI_API_V4_URL}/projects/21002959/packages/generic/integrator/${INTEGRATOR_VERSION}/bulk_integrator"
  OAS_REPO_URL: "https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/i3-market/code/wp4/backplane-subsystems-oas.git"
  SECRETS_URL: "http://95.211.3.251:8081/repository/i3m-raw/backplane/env/secrets.json"
  ANSIBLE_BACKPLANE_JOB_URL: "http://95.211.3.249:19000/api/v2/job_templates/13/launch/"
  ANSIBLE_SDK_JOB_URL: "http://95.211.3.249:19000/api/v2/job_templates/24/launch/"


get-integrator:
  stage: gather
  image: curlimages/curl:latest
  script:
    - 'curl --request GET --header "JOB-TOKEN: $CI_JOB_TOKEN" "${INTEGRATOR_URL}" --output bulk_integrator'
    - chmod +x ./bulk_integrator
  artifacts:
    paths:
      - bulk_integrator
    expire_in: 10 mins

get-secrets:
  stage: gather
  image: curlimages/curl:latest
  script:
    - echo $NEXUS_PASSWORD | curl --request GET -u "$NEXUS_USER" $SECRETS_URL --output .secrets.json
  artifacts:
    paths:
      - .secrets.json
    expire_in: 10 mins

get-subsystems-oas:
  stage: gather
  script:
    - git clone $OAS_REPO_URL ./specs
  artifacts:
    paths:
      - specs/
    exclude:
      - specs/.gitlab-ci.yml
      - specs/.git
      - spect/README.md
    expire_in: 10 mins


integrate-subsystems:
  stage: integrate
  image: node:16.14-bullseye-slim
  script:
    - npm i -g @loopback/cli@$LOOPBACK_CLI_VERSION
    - ./bulk_integrator . ./specs
  artifacts:
    untracked: true
    paths:
      - src/controllers/index.ts
      - src/datasources/index.ts
      - src/models/index.ts
      - src/repositories/index.ts
      - src/services/index.ts
      - .secrets.json
    expire_in: 10 mins


build:
  stage: build
  only:
    - master
  image:
    name: docker:19.03.13
  variables:
    NEXUS_REGISTRY: "95.211.3.251:8123"
    NEXUS_IMAGE_TAG: $NEXUS_REGISTRY/backplane:latest
    DOCKER_TLS_CERTDIR: ""
    GITLAB_IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  services:
      - name: docker:19.03.13-dind
        entrypoint: ["sh", "-c", "dockerd-entrypoint.sh --insecure-registry=$NEXUS_REGISTRY"]
  before_script:
    - echo $NEXUS_PASSWORD | docker login $NEXUS_REGISTRY --username $NEXUS_USER --password-stdin
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  script:
    - docker build -t $NEXUS_IMAGE_TAG -t $GITLAB_IMAGE_TAG .
    - docker push $NEXUS_IMAGE_TAG
    - docker push $GITLAB_IMAGE_TAG

image-analysis-trivy:
  stage: test
  needs: ['integrate-subsystems']
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    IMAGE: trivy-ci-test:$CI_COMMIT_SHA
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
    # ignore gobinary trivy during build
    - echo "trivy" > .dockerignore
  allow_failure: true
  script:
    # Build image
    - docker build -t $IMAGE .
    # Build report
    - ./trivy --cache-dir .trivycache/ image --exit-code 0 --no-progress --format template --template "@contrib/gitlab-codequality.tpl" -o gl-codeclimate.json $IMAGE
    # Print report
    - ./trivy --cache-dir .trivycache/ image --exit-code 0 --no-progress --severity HIGH $IMAGE
    # Fail on critical vulnerabilities
    - ./trivy --cache-dir .trivycache/ image --exit-code 1 --severity CRITICAL --no-progress $IMAGE
  cache:
    paths:
      - .trivycache/
  # Enables https://docs.gitlab.com/ee/user/application_security/container_scanning/ (Container Scanning report is available on GitLab EE Ultimate or GitLab.com Gold)
  artifacts:
    paths:
      - gl-codeclimate.json
    reports:
      codequality: gl-codeclimate.json # Currently it generates an unescaped json fixed here https://github.com/aquasecurity/trivy/commit/e618d83dae653eb78b4c03d097b69ed94fd56dce
  # Gitlab CI currently doesn't support adding more than one codequality report. But you can join them using jq
  # jq -s 'add' prev-codeclimate.json trivy-codeclimate.json > gl-codeclimate.json



update-secrets:
  stage: build
  script:
    - echo $NEXUS_PASSWORD | curl --request PUT -u "$NEXUS_USER" --upload-file .secrets.json $SECRETS_URL


deploy-ansible-backplane:
  stage: deploy
  script:
    - 'curl --request POST --header "Authorization: Bearer $ANSIBLE_DEPLOY_TOKEN" "$ANSIBLE_BACKPLANE_JOB_URL"'

deploy-ansible-sdk:
  stage: deploy
  only:
    - master
  script:
    - 'curl --request POST --header "Authorization: Bearer $ANSIBLE_DEPLOY_TOKEN" "$ANSIBLE_SDK_JOB_URL"'

deploy-backplane-docs:
  stage: deploy
  only:
    - master
  variables:
    DOCS_TRIGGER_REF: master
    DOCS_CI_URL: https://gitlab.com/api/v4/projects/26297031/trigger/pipeline
  script:
    - "curl -X POST -F token=${DOCS_TRIGGER_TOKEN} -F ref=${DOCS_TRIGGER_REF} ${DOCS_CI_URL}"