stages:
  - gather
  - integrate
  - build
  - deploy

variables:
  INTEGRATOR_VERSION: "1.0.3"
  INTEGRATOR_URL: "${CI_API_V4_URL}/projects/21002959/packages/generic/integrator/${INTEGRATOR_VERSION}/bulk_integrator"
  OAS_REPO_URL: "https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/i3-market/code/wp4/backplane-subsystems-oas.git"
  SECRETS_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/secrets/1.0.0/.secrets.json"
  ANSIBLE_JOB_URL: "http://95.211.3.249/api/v2/job_templates/13/launch/"
  DOCKER_REGISTRY: "95.211.3.251:8123"


get-integrator:
  stage: gather
  image: curlimages/curl:latest
  script:
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" "${INTEGRATOR_URL}"'
    - chmod +x ./bulk_integrator
  artifacts:
    paths:
      - bulk_integrator
    expire_in: 10 mins

get-secrets:
  stage: gather
  image: curlimages/curl:latest
  script:
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" "${SECRETS_URL}"'
  artifacts:
    paths:
      - .secrets.json
    expire_in: 10 mins

get-subsystems-oas:
  stage: gather
  script:
    - git clone $OAS_REPO_URL ./specs
  artifacts:
    paths:
      - specs/
    exclude:
      - specs/.gitlab-ci.yml
      - specs/.git
      - spect/README.md
    expire_in: 10 mins


integrate-subsystems:
  stage: integrate
  image: node:15-slim
  script:
    - npm i -g @loopback/cli@2.15.1
    - ./bulk_integrator . ./specs
  artifacts:
    untracked: true
    paths:
      - src/controllers/index.ts
      - src/datasources/index.ts
      - src/models/index.ts
      - src/repositories/index.ts
      - src/services/index.ts
      - .secrets.json
    expire_in: 10 mins


build:
  stage: build
  image:
    name: docker:19.03.13
  services:
    - name: docker:19.03.13-dind
      entrypoint: [ "sh", "-c", "dockerd-entrypoint.sh", "--insecure-registry=${DOCKER_REGISTRY}"]
  variables:
    IMAGE_TAG: $DOCKER_REGISTRY/backplane:latest
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKER_REGISTRY_PASSWORD" | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG


update-secrets:
  stage: build
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file .secrets.json "$SECRETS_URL"'


deploy-ansible:
  stage: deploy
  script:
    - 'curl --request POST --header "Authorization: Bearer $ANSIBLE_DEPLOY_TOKEN" "$ANSIBLE_JOB_URL"'
